#include <bits/stdc++.h>
using namespace std;

struct Node
{
  int data;
  struct Node *left;
  struct Node *right;
  Node(int val)
  {
    data = val;
    left = right = NULL;
  }
};

class Solution
{
public:
  vector<int> inorderTraversal(Node* root) {

    stack<Node*> st;
    vector<int> ans;

    Node* n = root;
    while (n != NULL || !st.empty()) {
      while (n != NULL) {
        st.push(n);
        n = n->left;
      }
      n = st.top();
      st.pop();
      ans.push_back(n->data);
      n = n->right;

    }
    return ans;
  }
};


int main()
{
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif

  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);

  Node *root = new Node(2);
  root->left = new Node(3);
  root->right = new Node(5);
  root->left->right = new Node(8);

  Solution ob;
  vector<int> inorder;
  inorder = ob.inorderTraversal(root);
  for (auto i : inorder) {
    cout << i << endl;
  }
}
